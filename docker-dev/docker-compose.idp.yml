
version: "3.9"
name: diaster-gateway-dev-idp
networks: { idp_net: { driver: bridge } }
volumes: { kc_pgdata: {} }

services:
  kc-postgres:
    image: postgres:16
    container_name: dg-dev-kc-postgres
    environment:
      POSTGRES_DB: ${KC_DB_NAME:-keycloak}
      POSTGRES_USER: ${KC_DB_USER:-keycloak}
      POSTGRES_PASSWORD: ${KC_DB_PASS:-keycloak}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - kc_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USER:-keycloak} -d ${KC_DB_NAME:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [idp_net]

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: dp-dev-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://kc-postgres:5432/${KC_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KC_DB_USER:-keycloak}
      KC_DB_PASSWORD: ${KC_DB_PASS:-keycloak}
      KC_HEALTH_ENABLED: "true"
      KC_HOSTNAME: host.docker.internal
    command: ["start-dev","--import-realm"]
    ports:
      - "${KEYCLOAK_HTTP_PORT:-8080}:8080"
    volumes:
      - ../docker/keycloak/import:/opt/keycloak/data/import:ro
    depends_on:
      kc-postgres: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080; echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3; cat <&3 | grep '200 OK' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks: [idp_net]
